C51 COMPILER V9.60.7.0   SPI_SLAVE                                                         04/07/2025 14:10:35 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SPI_SLAVE
OBJECT MODULE PLACED IN .\Objects\SPI_slave.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SPI_slave.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\SPI_slave.lst) TABS(2) OBJECT(.\Objects\SPI_slave.obj)

line level    source

   1          #include "spi.h"
   2          #include "lcd.h"
   3          #include <at89c5131.h>
   4          #include "mcp3008.h"  
   5          sbit SS = P1^4;
   6          
   7          unsigned int is_prime(unsigned int n) {
   8   1          unsigned int i;
   9   1          if (n < 2) return 2;
  10   1          for (i = 2; i * i <= n; ++i) {
  11   2              if (n % i == 0) return 2;
  12   2          }
  13   1          return 1;
  14   1      }
  15          
  16          void main(void) {
  17   1          unsigned int num1, num2, sum, result;
  18   1          char adc_ip_data_ascii[6]={0,0,0,0,0,'\0'};   
  19   1          spi_slave_init();     
  20   1          lcd_init();
  21   1          lcd_write_string("SLAVE INIT");
  22   1          
  23   1          lcd_cmd(0x01);
  24   1          num1 = spi_trx(0x00);
  25   1          int_to_string(num1, adc_ip_data_ascii);
  26   1          lcd_write_string(adc_ip_data_ascii);
  27   1          
  28   1          num2 = spi_trx(0x00);
  29   1          lcd_write_char('+');
  30   1          int_to_string(num2, adc_ip_data_ascii);
  31   1          lcd_write_string(adc_ip_data_ascii);
  32   1          // Compute sum and check if prime
  33   1          sum = num1 + num2;
  34   1          result = is_prime(sum);
  35   1          lcd_cmd(0xC0);
  36   1          // Display sum
  37   1          lcd_write_string("Sum is ");
  38   1          int_to_string(sum, adc_ip_data_ascii);
  39   1          lcd_write_string(adc_ip_data_ascii);
  40   1          // Send result back to master
  41   1          spi_trx(result);
  42   1      
  43   1          while (1);  // Keep display on
  44   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    802    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      38
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.60.7.0   SPI_SLAVE                                                         04/07/2025 14:10:35 PAGE 2   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
