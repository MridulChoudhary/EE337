C51 COMPILER V9.60.7.0   SPI_SLAVE                                                         04/14/2025 23:48:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SPI_SLAVE
OBJECT MODULE PLACED IN .\Objects\SPI_Slave.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE SPI_Slave.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\SPI_Slave.lst) TABS(2) OBJECT(.\Objects\SPI_Slave.obj)

line level    source

   1          #include "spi.h"
   2          #include <at89c5131.h>
   3          #include "lcd.h"
   4          #include <stdio.h>
   5          
   6          sbit SS = P1^4;
   7          
   8          extern void mac_operation(void);
   9          
  10          //data unsigned int num1 = (unsigned int )0x30;
  11          //data unsigned int num2 = (unsigned int )0x31;
  12          //data unsigned int sum = (unsigned int )0x32;
  13          
  14          xdata unsigned int num1, num2, sum, a1, a2;
  15          //int sum;
  16          int result;
  17          int digits = 0;
  18          char adc_ip_data_ascii[6] = {'0','0','0','0','0','\0'};
  19          int i=0;
  20          int p=1;
  21          char buffer[20];
  22          int sum2 = 0;
  23          
  24          unsigned int is_prime(unsigned int n) {
  25   1          unsigned int i;
  26   1          if (n < 2) return 2;
  27   1          for (i = 2; i * i <= n; ++i) {
  28   2              if (n % i == 0) return 2;
  29   2          }
  30   1          return 1;
  31   1      }
  32          
  33          void main(void) { 
  34   1      
  35   1        spi_slave_init();
  36   1        lcd_init();
  37   1        num1=0;
  38   1        num2=0;
  39   1        sum=0;
  40   1        
  41   1        lcd_cmd(0x01);
  42   1        lcd_cmd(0x80);
  43   1        lcd_write_string("Slave Initialize");
  44   1      
  45   1      /*  digits = spi_trx(0x00);
  46   1        p = 1;
  47   1        for(i=0; i<digits; i++){
  48   1          num1 += (p * (spi_trx(0x00)));
  49   1          p *= 10;
  50   1        }
  51   1      */
  52   1        num1 = spi_trx(0x00);
  53   1      //  int_to_string(num1, adc_ip_data_ascii);
  54   1        lcd_cmd(0x01);
C51 COMPILER V9.60.7.0   SPI_SLAVE                                                         04/14/2025 23:48:26 PAGE 2   

  55   1        lcd_cmd(0x80);
  56   1      //  lcd_write_string(adc_ip_data_ascii);
  57   1      
  58   1      
  59   1        
  60   1      /*  digits = spi_trx(0x00);
  61   1        p = 1;
  62   1        for(i=0; i<digits; i++){
  63   1          num2 += (p * (spi_trx(0x00)));
  64   1          p *= 10;
  65   1        }
  66   1      */
  67   1        num2 = spi_trx(0x00);
  68   1      
  69   1        a1 = spi_trx(0x00);
  70   1        a2 = spi_trx(0x00);
  71   1      
  72   1        lcd_write_string('*');
  73   1        sprintf(buffer, "%d*%d+%d*%d", num1, a1, num2, a2);  // Convert integer to string
  74   1        lcd_write_string(buffer);
  75   1      //  lcd_write_char('+');
  76   1      //  int_to_string(num2, adc_ip_data_ascii);
  77   1      //  lcd_write_string(adc_ip_data_ascii);
  78   1      //  lcd_write_string('*');
  79   1      //  int_to_string(a2, adc_ip_data_ascii);
  80   1      //  lcd_write_string(adc_ip_data_ascii);  
  81   1        
  82   1      //  sum = num1 + num2;
  83   1      //   add_numbers();           // Call assembly function to compute sum
  84   1        mac_operation();
  85   1        sum2 = num1 * a1 + num2 * a2;
  86   1        result = is_prime(sum2);
  87   1        lcd_cmd(0xC0);
  88   1        
  89   1        sprintf(buffer, "Sum is %d", sum2);  // Convert integer to string 
  90   1        lcd_write_string(buffer);
  91   1      
  92   1        spi_trx(result);
  93   1        
  94   1        while (1);  // Keep display on
  95   1      
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    818    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
