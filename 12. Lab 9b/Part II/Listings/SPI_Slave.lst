C51 COMPILER V9.60.7.0   SPI_SLAVE                                                         04/14/2025 22:34:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SPI_SLAVE
OBJECT MODULE PLACED IN .\Objects\SPI_Slave.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SPI_Slave.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\SPI_Slave.lst) TABS(2) OBJECT(.\Objects\SPI_Slave.obj)

line level    source

   1          #include "spi.h"
   2          #include <at89c5131.h>
   3          #include "lcd.h"
   4          
   5          sbit SS = P1^4;
   6          
   7          //extern void add_numbers(void);
   8          
   9          //data unsigned int num1 = (unsigned int )0x30;
  10          //data unsigned int num2 = (unsigned int )0x31;
  11          //data unsigned int sum = (unsigned int )0x32;
  12          
  13          int num1, num2, sum, result;
  14          //int result;
  15          int digits = 0;
  16          char adc_ip_data_ascii[6] = {'0','0','0','0','0','\0'};
  17          int i=0;
  18          int p=1;
  19          
  20          unsigned int is_prime(unsigned int n) {
  21   1          unsigned int i;
  22   1          if (n < 2) return 2;
  23   1          for (i = 2; i * i <= n; ++i) {
  24   2              if (n % i == 0) return 2;
  25   2          }
  26   1          return 1;
  27   1      }
  28          
  29          void main(void) { 
  30   1      
  31   1        spi_slave_init();
  32   1        lcd_init();
  33   1        num1=0;
  34   1        num2=0;
  35   1        sum=0;
  36   1        
  37   1        lcd_cmd(0x01);
  38   1        lcd_cmd(0x80);
  39   1        lcd_write_string("Slave Initialize");
  40   1      
  41   1      /*  digits = spi_trx(0x00);
  42   1        p = 1;
  43   1        for(i=0; i<digits; i++){
  44   1          num1 += (p * (spi_trx(0x00)));
  45   1          p *= 10;
  46   1        }
  47   1      */
  48   1        num1 = spi_trx(0x00);
  49   1        int_to_string(num1, adc_ip_data_ascii);
  50   1        lcd_cmd(0x01);
  51   1        lcd_cmd(0x80);
  52   1        lcd_write_string(adc_ip_data_ascii);
  53   1        
  54   1      /*  digits = spi_trx(0x00);
C51 COMPILER V9.60.7.0   SPI_SLAVE                                                         04/14/2025 22:34:00 PAGE 2   

  55   1        p = 1;
  56   1        for(i=0; i<digits; i++){
  57   1          num2 += (p * (spi_trx(0x00)));
  58   1          p *= 10;
  59   1        }
  60   1      */
  61   1        num2 = spi_trx(0x00);
  62   1        lcd_write_char('+');
  63   1        int_to_string(num2, adc_ip_data_ascii);
  64   1        lcd_write_string(adc_ip_data_ascii);
  65   1        
  66   1        sum = num1 + num2;
  67   1      //   add_numbers();           // Call assembly function to compute sum
  68   1        result = is_prime(sum);
  69   1        lcd_cmd(0xC0);
  70   1        lcd_write_string("Sum is ");
  71   1        int_to_string(sum, adc_ip_data_ascii);
  72   1        lcd_write_string(adc_ip_data_ascii);
  73   1      
  74   1        spi_trx(result);
  75   1        
  76   1        while (1);  // Keep display on
  77   1      
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    706    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
