#include <at89c5131.h>
#include <math.h>
#include "lcd.h"
#include <stdio.h>

sbit SPEAKER = P0^7;
sbit P30 = P3^0;
sbit P31 = P3^1;
sbit P32 = P3^2;
sbit P33 = P3^3;
sbit P34 = P3^4;
sbit P35 = P3^5;
sbit P36 = P3^6;
sbit P37 = P3^7;

int row;
int col;
int x2;

code unsigned char display_msg1[]="        sa      ";
code unsigned char display_msg2[]="        re      ";
code unsigned char display_msg3[]="        ga      ";
code unsigned char display_msg4[]="        ma      ";
code unsigned char display_msg5[]="        pa      ";
code unsigned char display_msg6[]="       dha      ";
code unsigned char display_msg7[]="        ni      ";
code unsigned char display_msg8[]="        sa      ";
code unsigned char display_msg9[]="      shhh      ";


void timer1_isr () interrupt 3
{
	 SPEAKER = ~SPEAKER;
	 if (row==1 & col==1)
	 {
	 TH1 =   0xF0;
	 TL1 =   0x2E;
	 TR1 = 1; //start timer 1
	 }
	 if (row==1 & col==2)
	 {
	 TH1 =   0xF1;
	 TL1 =   0x12;
	 TR1 = 1; //start timer 1
	 }
	 if (row==1 & col==3)
	 {
	 TH1 =   0xF1;
	 TL1 =   0xE8;
	 TR1 = 1; //start timer 1
	 }
	 if (row==2 & col==1)
	 {
	 TH1 =   0xF2;
	 TL1 =   0xB3;
	 TR1 = 1; //start timer 1
	 }
	 if (row==2 & col==2)
	 {
	 TH1 =   0xF3;
	 TL1 =   0x72;
	 TR1 = 1; //start timer 1
	 }
	 if (row==2 & col==3)
	 {
	 TH1 =   0xF4;
	 TL1 =   0x26;
	 TR1 = 1; //start timer 1
	 }
	 if (row==3 & col==1)
	 {
	 TH1 =   0xF4;
	 TL1 =   0xD1;
	 TR1 = 1; //start timer 1
	 }
	 if (row==3 & col==2)
	 {
	 TH1 =   0xF5;
	 TL1 =   0x71;
	 TR1 = 1; //start timer 1
	 }
	 else if (row==3 & col==3)
	 {
	 TH1 =   0xFF;
	 TL1 =   0xFF;
	 TR1 = 1; //start timer 1
	 }	 
 }


	 
	 
	 
void main(void)
{
	while(1){
	TMOD =  0x11;
	TH1 =   0xFF;
	TL1 =   0xFF;
	ET1 = 1;
	EA = 1;

lcd_init();
lcd_cmd(0x80);													//Move cursor to first line
msdelay(4);
lcd_write_string("    let's go    ");

P3=0x0F;
while(P3!=0x0F);		//shows that no key is pressed
while(1){
while(P3==0x0F);
msdelay(20);
if(P3!=0x0F){ 
x2=P3;
break;
}
}

while(1){
	
P34=0;
P35=1;
P36=1;
P37=1;
	
if((P30 & P31 & P32 & P33)!=1){
	row=1;
	if(P30==0) col=1;
	if(P31==0) col=2;
	if(P32==0) col=3;
	if(P33==0) col=4;
}

P34=1;
P35=0;
P36=1;
P37=1;
	
if((P30 & P31 & P32 & P33)!=1){
	row=2;
	if(P30==0) col=1;
	if(P31==0) col=2;
	if(P32==0) col=3;
	if(P33==0) col=4;
}

P34=1;
P35=1;
P36=0;
P37=1;
	
if((P30 & P31 & P32 & P33)!=1){
	row=3;
	if(P30==0) col=1;
	if(P31==0) col=2;
	if(P32==0) col=3;
	if(P33==0) col=4;
}

P34=1;
P35=1;
P36=1;
P37=0;
	
if((P30 & P31 & P32 & P33)!=1){
	row=4;
	if(P30==0) col=1;
	if(P31==0) col=2;
	if(P32==0) col=3;
	if(P33==0) col=4;
}
P3=0x0F;
if(P3==0x0F){
	break;
}

lcd_init();
lcd_cmd(0x80);													//Move cursor to first line
msdelay(4);
switch(row) {
    case 1:
        switch(col) {
            case 1:
                lcd_write_string(display_msg1);
								TR1 = 1;
                break;
            case 2:
                lcd_write_string(display_msg2);
								TR1 = 1;
                break;
            case 3:
                lcd_write_string(display_msg3);
								TR1 = 1;
                break;
            default: TR1=0;
              break;
        }
        break;
    case 2:
        switch(col) {
            case 1:
                lcd_write_string(display_msg4);
								TR1 = 1;
                break;
            case 2:
                lcd_write_string(display_msg5);
								TR1 = 1;
                break;
            case 3:
                lcd_write_string(display_msg6);
								TR1 = 1;
                break;
            default: TR1=0;
                break;
        }
        break;
    case 3:
        switch(col) {
            case 1:
                lcd_write_string(display_msg7);
								TR1 = 1;
                break;
            case 2:
                lcd_write_string(display_msg8);
								TR1 = 1;
                break;
            case 3:
                lcd_write_string(display_msg9);
								TR1 = 1;
                break;
            default: 
								TR1 = 0;
                break;
        }
        break;
    default: TR1=0;
        break;
}

}
}
}


