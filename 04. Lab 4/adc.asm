//-- DO NOT CHANGE ANYTHING UNTIL THE **** LINE--//
ORG 0H
LJMP MAIN
ORG 100H
MAIN:
CALL TAKE_INP
CALL QUANT_ENC
CALL LED_DISP
HERE: SJMP HERE
ORG 130H
// *****************
DELAY_8s:
	PUSH 00H
	MOV R0, #8
h5:
	CALL DELAY_1s
	DJNZ R0, h5
	POP 00H
	RET
DELAY_4s:
	PUSH 00H
	MOV R0, #4
h4:
	CALL DELAY_1s
	DJNZ R0, h4
	POP 00H
	RET
DELAY_1s:
	PUSH 00H
	MOV R0, #100
h3: 
   CALL delay_10ms 
   DJNZ R0, h3
   POP 00H
   RET
   
// ADD YOUR CODE HERE
delay_10ms:
	push 00h
	mov r0, #40
h2: 
	acall delay_250us
	djnz r0, h2
	pop 00h
	ret
delay_250us:
	push 00h
	mov r0, #244
h1:
	djnz r0, h1
	pop 00h
	ret
// ADD YOUR CODE HERE
TAKE_INP:
	MOV P1, #1FH
	CALL DELAY_8s
	CLR P1.4
	MOV A, P1
	RL A
	RL A
	RL A
	RL A
	//MOV R0, A
	MOV P1, #2FH
	CALL DELAY_8s
	CLR P1.5
	ORL A, P1
	MOV 50H, A
	
	
	MOV P1, #3FH
	CALL DELAY_8s
	CLR P1.4
	CLR P1.5
	MOV A, P1
	RL A
	RL A
	RL A
	RL A
	//MOV R0, A
	MOV P1, #4FH
	CALL DELAY_8s
	CLR P1.6
	ORL A, P1
	MOV 51H, A
	
	
	MOV P1, #5FH
	CALL DELAY_8s
	CLR P1.6
	CLR P1.4
	MOV A, P1
	RL A
	RL A
	RL A
	RL A
	//MOV R0, A
	MOV P1, #6FH
	CALL DELAY_8s
	CLR P1.6
	CLR P1.5
	ORL A, P1
	MOV 52H, A
	
	
	MOV P1, #7FH
	CALL DELAY_8s
	CLR P1.6
	CLR P1.5
	CLR P1.4
	MOV A, P1
	RL A
	RL A
	RL A
	RL A
	//MOV R0, A
	MOV P1, #8FH
	CALL DELAY_8s
	CLR P1.7
	ORL A, P1
	MOV 53H, A
RET
// ADD YOUR CODE HERE
QUANT_ENC:
	MOV R1, #50H
QUANT_ENC_CHECK:
	CLR C
	MOV A, @R1
	SUBB A, #40H
	JC LESS_THAN_64
	
	CLR C
	MOV A, @R1
	SUBB A, #80H
	JC BETWEEN_64_128

	CLR C
	MOV A, @R1
	SUBB A, #0C0H
	JC BETWEEN_128_192

	JMP MORE_THAN_192

LESS_THAN_64:
	MOV @R1, #10H
	INC R1
	CJNE R1, #54H, QUANT_ENC_CHECK
	RET
	
BETWEEN_64_128:
	MOV @R1, #20H
	INC R1
	CJNE R1, #54H, QUANT_ENC_CHECK
	RET
	
BETWEEN_128_192:
	MOV @R1, #40H
	INC R1
	CJNE R1, #54H, QUANT_ENC_CHECK
	RET
	
MORE_THAN_192:
	MOV @R1, #80H
	INC R1
	CJNE R1, #54H, QUANT_ENC_CHECK
	RET
// ADD YOUR CODE HERE
LED_DISP:
	MOV R1, #50H
	
LED_LOOP:
	MOV P1, @R1
	CALL DELAY_4s
	INC R1
	CJNE R1,#54H, LED_LOOP
	JMP LED_DISP
// ADD YOUR CODE HERE
RET
END